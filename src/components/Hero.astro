---
import { Icon } from 'astro-icon'

const { src = '../../images/john-allen-2024-illustrated-portrait.png' } = Astro.props

function getGreetingBasedOnTime() {
    let currentHour = new Date().getHours();
    let greeting;

    if (currentHour < 12) {
        greeting = "Good Morning";
    } else if (currentHour < 18) {
        greeting = "Good Afternoon";
    } else {
        greeting = "Good Evening";
    }

    return greeting;
}

import { Modal } from 'accessible-astro-components';
import ContactForm from './ContactForm.astro';

---

<section class="hero my-12">
  <div class="container">
    <div class="grid grid-cols-1 items-center gap-24 lg:grid-cols-2">
      <div class="flex flex-col items-center gap-8 md:items-start">
        <h1 class="text-left text-4xl lg:text-5x1">
            <slot>{ getGreetingBasedOnTime }! <br>
            I develop websites & business solutions for great clients.</slot>
        </h1>
        <p class="text-3x1">
          (I'm a Front End Developer in Birmingham, AL.)
        </p>
        <div class="flex flex-col gap-3 min-[500px]:flex-row">
          <a class="button has-icon color-neutral" href="/blog">
            <Icon pack="ion" name="book-outline" />
            Blog
          </a>
          <button id="contact-modal-trigger" class="button has-icon color-primary">
            <Icon pack="gridicons" name="phone" />
            Contact
          </button>
          <Modal triggerId="contact-modal-trigger" title="Contact John" closeText="Close Form Popup">
            <div class="w-full md:min-w-[400px] max-w-[500] mx-auto">
              <p class="my-6">
                Fill out the form to send me a message.
              </p>
              <ContactForm buttonText="Send Message" />
            </div>
          </Modal>
          
        </div>
      </div>
      <img class="hidden lg:block" src={src} alt="" decoding="async" />
    </div>
  </div>
</section>

<style lang="scss">
  .text-gradient {
    background: linear-gradient(315deg, var(--primary-200) 25%, var(--secondary-500));
    background-clip: border-box;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  :global(.darkmode .text-gradient) {
    background: linear-gradient(315deg, var(--primary-200) 25%, var(--secondary-400));
    background-clip: border-box;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
</style>
