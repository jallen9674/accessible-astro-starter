---
import { Icon } from 'astro-icon/components'

//const { src = '../../images/john-allen-web-developer-united-states.png' } = Astro.props

function getGreetingBasedOnTime() {
  let currentHour = new Date().getHours()
  let greeting

  if (currentHour < 12) {
    greeting = 'Good Morning'
  } else if (currentHour < 18) {
    greeting = 'Good Afternoon'
  } else {
    greeting = 'Good Evening'
  }

  return greeting
}

import ContactForm from './ContactForm.astro'

const cubismImage1 = '/images/cubism/john-allen-cubism-1.png'
const cubismImage2 = '/images/cubism/john-allen-cubism-2.png'
const cubismImage3 = '/images/cubism/john-allen-cubism-4.png'
const cubismImage4 = '/images/cubism/john-allen-cubism-5.png'
const cubismImage5 = '/images/cubism/john-allen-cubism-6.webp'

const june24Image = '/images/john-allen-2024.png'

const items = [cubismImage1, cubismImage2, cubismImage3, cubismImage4, cubismImage5]

// Get a random index between 0 and the length of the array minus 1
var randomIndex = Math.floor(Math.random() * items.length)

// Get the item based on the random index
var randomItem = items[randomIndex]

import backgroundImage from '../assets/img/img-test.webp';
import cubismRealImage from '../assets/img/cubism/john-allen-cubism-4.png';
import Image from 'astro/components/Image.astro'
---

<section class="hero my-6 md:my-12">
  <div class="container max-w-screen-md">
    <div class="mx-auto grid max-w-[700px] grid-cols-1 items-center gap-12 md:gap-24 lg:max-w-none lg:grid-cols-2">
      <div class="flex flex-col items-center gap-8 md:items-start">
        <h1 class="lg:text-5x1 text-left text-2xl md:text-4xl">
          <slot>Hello! I develop websites & business solutions for great clients.</slot>
          {/*{getGreetingBasedOnTime}!  */}
        </h1>
        <p class="text-3x1">(People say I'm a Sr. Front End Developer in Birmingham, AL.)</p>
        <div class="flex flex-col gap-3 min-[500px]:flex-row">
          {
            /*
          <a class="button has-icon color-neutral" href="/blog">
            <Icon name="fluent:news-16-regular" class="" />
            Blog
          </a>
           */
          }
          <a href="/contact" class="button has-icon color-primary">
            <Icon name="fluent:contact-card-48-regular" />
            Contact
          </a>
        </div>
      </div>
      <div class="hero-content-section">
          <div class="hero-content-section__inner">
            <Image src={backgroundImage} alt={'Credit: ChatGPT/DALL-E, AI Generated Image'} class="hero-content-section__image"></Image>
            <div class="hero-content-section__image-description">
              Welcome to my cozy corner of the web.
            </div>
          </div>
      </div>
      <div class="image-frame" id="portfolio-images">
        <img aria-hidden="false" src={june24Image} alt="John Allen Software Engineer USA" height="400" width="400" />
       

        <div class="image-frame__source">
          Image Credit: <a href="https://openai.com/dall-e-3" target="_blank" rel="nofollow">ChatGPT/DALL-E</a>
        </div>
      </div>
    </div>
  </div>

  
</section>

<style lang="scss">
  .text-gradient {
    background: linear-gradient(315deg, var(--primary-200) 25%, var(--secondary-500));
    background-clip: border-box;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .image-frame {
    width: fit-content;
    margin-left: auto;
    margin-right: auto;
    position: relative;

    &:after {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      background: var(--secondary-100);
      opacity: 0.1;
      content: '';
      z-index: 18;
      pointer-events: none;
    }

    img {
      max-width: 700px;
      border: 8px solid var(--primary-100);
      //box-shadow: 0 2px 12px rgba(0, 0, 0, 0.3);
      width: fit-content;
      filter: grayscale(0.3);
      filter: hue-rotate(342deg) grayscale(0.3);
      min-height: 0;
      max-width: 550px;
      width: 100%;
      transition: 0.2s;
      margin: 0 auto;
    }

  }

  .image-frame__source {
    text-transform: uppercase;
    font-size: 10px;
    font-weight: bold;
    //letter-spacing: 1px;
    padding: 5px 10px;
    display: block;
  }

  :global(.darkmode .image-frame img) {
    border: 8px solid var(--primary-100);
  }

  :global(.darkmode .text-gradient) {
    background: linear-gradient(315deg, var(--primary-200) 25%, var(--secondary-400));
    background-clip: border-box;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  
  .image-frame {
    display: none !important;
  }

  .hero {
    

    @media (min-width: 10px) {

      min-height: 600px;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }

  .hero-content-section {
    background-color: var(--neutral-100);
    padding: 2rem;
    box-shadow: 0 0px 8px rgba(0,0,0,0.1) inset;
    
  }

  .hero-content-section__inner {
    background-color: var(--neutral-400);
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    
    justify-content: center;
    padding: 2rem 2rem 0 2rem;
    box-shadow: 0 0px 4px rgba(0,0,0,0.2) inset;

    @media (min-width: 768px) {
      padding: 3rem;
    }
  }

  .hero-content-section__image {
    box-shadow: 0 0px 8px rgba(0,0,0,0.4);
    filter: grayscale(0.5);
    display: block;
    width: auto;
    max-height: 300px;
    aspect-ratio: 1 / 1;
    max-width: 100%;
  }

  .hero-content-section__image-description {
    font-size: 1.3rem;
    text-align: center;
    color: var(--neutral-900);
    font-style: italic;
    font-weight: 200;
    letter-spacing: 0.5px;
    margin-top: 1rem;
    margin-bottom: 1rem;
    font-family: var(--font-family-special);

    @media (min-width: 768px) {
      margin-top: 1rem;
      margin-bottom: -1rem;
    }
  }
 

</style>
