---
import { Icon } from 'astro-icon/components'

//const { src = '../../images/john-allen-web-developer-united-states.png' } = Astro.props

function getGreetingBasedOnTime() {
  let currentHour = new Date().getHours()
  let greeting

  if (currentHour < 12) {
    greeting = 'Good Morning'
  } else if (currentHour < 18) {
    greeting = 'Good Afternoon'
  } else {
    greeting = 'Good Evening'
  }

  return greeting
}

import ContactForm from './ContactForm.astro'

const cubismImage1 = '/images/cubism/john-allen-cubism-1.png'
const cubismImage2 = '/images/cubism/john-allen-cubism-2.png'
const cubismImage3 = '/images/cubism/john-allen-cubism-4.png'
const cubismImage4 = '/images/cubism/john-allen-cubism-5.png'
const cubismImage5 = '/images/cubism/john-allen-cubism-6.webp'

const items = [cubismImage1, cubismImage2, cubismImage3, cubismImage4, cubismImage5]

// Get a random index between 0 and the length of the array minus 1
var randomIndex = Math.floor(Math.random() * items.length)

// Get the item based on the random index
var randomItem = items[randomIndex]
---

<section class="hero my-6 md:my-12">
  <div class="container max-w-screen-md">
    <div class="mx-auto grid max-w-[700px] grid-cols-1 items-center gap-12 md:gap-24 lg:max-w-none lg:grid-cols-2">
      <div class="flex flex-col items-center gap-8 md:items-start">
        <h1 class="lg:text-5x1 text-left text-2xl md:text-4xl">
          <slot>Hello! I develop websites & business solutions for great clients.</slot>
          {/*{getGreetingBasedOnTime}!  */}
        </h1>
        <p class="text-3x1">(People say I'm a Sr. Front End Developer in Birmingham, AL.)</p>
        <div class="flex flex-col gap-3 min-[500px]:flex-row">
          <a class="button has-icon color-neutral" href="/blog">
            <Icon name="fluent:news-16-regular" class="" />
            Blog
          </a>
          <a href="/contact" class="button has-icon color-primary">
            <Icon name="fluent:contact-card-48-regular" />
            Contact
          </a>
        </div>
      </div>
      <div class="image-frame" id="portfolio-images">
        <img
          aria-hidden="true"
          src={cubismImage1}
          alt="John Allen Full Stack Web Developer"
          id="hero-cube"
          height="400"
          width="400"
          style="opacity: 0; visibility:hidden; display: none;"
        />
        <img
          aria-hidden="true"
          src={cubismImage2}
          alt="John Allen Front-end Web Developer USA"
          id="hero-cube"
          height="400"
          width="400"
          style="opacity: 0; visibility:hidden; display: none;"
        />
        <img
          src={cubismImage3}
          alt="John Allen Web Developer USA"
          id="hero-cube"
          height="400"
          width="400"
          style="opacity: 0; visibility:hidden; display: none;"
        />
        <img
          aria-hidden="true"
          src={cubismImage4}
          alt="John Allen WordPress Developer USA"
          id="hero-cube"
          height="400"
          width="400"
          style="opacity: 0; visibility:hidden; display: none;"
        />
        <img
          aria-hidden="true"
          src={cubismImage5}
          alt="John Allen Software Engineer USA"
          id="hero-cube"
          height="400"
          width="400"
          style="opacity: 0; visibility:hidden; display: none;"
        />
        <noscript>
          <img src={cubismImage3} alt="John Allen Web Developer USA" id="hero-cube" height="400" width="400" />
        </noscript>
        <div class="image-frame__source">
          Image Credit: <a href="https://openai.com/dall-e-3" target="_blank" rel="nofollow">ChatGPT/DALL-E</a>
        </div>
      </div>
    </div>
  </div>

  <script is:inline>
    if (!window.randomNum) {
      // Generate a random number between 1 and 5
      let randomNum = Math.floor(Math.random() * 5) + 1

      // Select all images and hide them
      const images = document.querySelectorAll('#portfolio-images img')
      images.forEach((img) => (img.style.display = 'none'))

      // Find the currently visible image and fade it out
      let visibleImg = document.querySelector('#portfolio-images img[style*="display: block"]')
      if (visibleImg) {
        let opacity = 1
        const fadeOutInterval = setInterval(function () {
          if (opacity <= 0) {
            clearInterval(fadeOutInterval)
            visibleImg.style.visibility = 'visible'
            visibleImg.style.display = 'block'
          } else {
            opacity -= 0.4
            visibleImg.style.opacity = opacity
          }
        }, 100)
      }

      // Fade in the image with the nth-of-type corresponding to the random number
      let selectedImg = document.querySelector(`#portfolio-images img:nth-of-type(${randomNum})`)
      if (selectedImg) {
        selectedImg.style.visibility = 'visible'
        selectedImg.style.display = 'block'
        selectedImg.style.opacity = 0
        let opacity = 0
        const fadeInInterval = setInterval(function () {
          if (opacity >= 1) {
            clearInterval(fadeInInterval)
          } else {
            opacity += 0.25
            selectedImg.style.opacity = opacity
          }
        }, 30)
      }
    }
  </script>
</section>

<style lang="scss">
  .text-gradient {
    background: linear-gradient(315deg, var(--primary-200) 25%, var(--secondary-500));
    background-clip: border-box;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .image-frame {
    width: fit-content;
    margin-left: auto;
    margin-right: auto;

    img {
      max-width: 700px;
      border: 8px solid var(--primary-100);
      //box-shadow: 0 2px 12px rgba(0, 0, 0, 0.3);
      width: fit-content;
      filter: grayscale(0.6);
      min-height: 0;
      max-width: 550px;
      width: 100%;
      transition: 0.2s;
      margin: 0 auto;
    }

    &:after {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      background: var(--secondary-100);
      opacity: 0.2;
      content: '';
      z-index: 18;
      pointer-events: none;
    }

    position: relative;
  }

  .image-frame__source {
    text-transform: uppercase;
    font-size: 10px;
    font-weight: bold;
    //letter-spacing: 1px;
    padding: 5px 10px;
    display: block;
  }

  :global(.darkmode .image-frame img) {
    border: 8px solid var(--primary-100);
  }

  :global(.darkmode .text-gradient) {
    background: linear-gradient(315deg, var(--primary-200) 25%, var(--secondary-400));
    background-clip: border-box;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
</style>
